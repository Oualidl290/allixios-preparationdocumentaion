# ============================================================================
# BASE DOCKERFILE FOR ALLIXIOS SERVICES
# Multi-stage build for optimized production images
# ============================================================================

FROM node:18-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    dumb-init \
    curl \
    wget \
    git \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Create app directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S allixios -u 1001

# ============================================================================
# DEPENDENCIES STAGE
# ============================================================================
FROM base AS deps

# Copy package files
COPY package*.json ./
COPY yarn.lock* ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# ============================================================================
# BUILD STAGE
# ============================================================================
FROM base AS build

# Copy package files
COPY package*.json ./
COPY yarn.lock* ./

# Install all dependencies (including dev)
RUN npm ci

# Copy source code
COPY . .

# Build application
RUN npm run build

# ============================================================================
# PRODUCTION STAGE
# ============================================================================
FROM base AS production

# Set environment
ENV NODE_ENV=production
ENV PORT=3000

# Copy production dependencies
COPY --from=deps --chown=allixios:nodejs /app/node_modules ./node_modules

# Copy built application
COPY --from=build --chown=allixios:nodejs /app/dist ./dist
COPY --from=build --chown=allixios:nodejs /app/package*.json ./

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads /app/temp && \
    chown -R allixios:nodejs /app

# Switch to non-root user
USER allixios

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Expose port
EXPOSE $PORT

# Start application with dumb-init
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/index.js"]