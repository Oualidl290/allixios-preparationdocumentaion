# ============================================================================
# KUBERNETES SECRETS
# Store sensitive configuration data
# NOTE: In production, use external secret management (e.g., HashiCorp Vault)
# ============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: allixios-secrets
  namespace: allixios
  labels:
    app.kubernetes.io/name: allixios
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database Passwords
  POSTGRES_PASSWORD: "change_me_postgres_password"
  MONGO_ROOT_PASSWORD: "change_me_mongo_password"
  REDIS_PASSWORD: "change_me_redis_password"
  CLICKHOUSE_PASSWORD: "change_me_clickhouse_password"
  
  # JWT & Security
  JWT_SECRET: "change_me_jwt_secret_minimum_32_characters_long"
  ENCRYPTION_KEY: "change_me_encryption_key_32_chars"
  SESSION_SECRET: "change_me_session_secret_key"
  
  # AI API Keys
  OPENAI_API_KEY: "sk-change_me_openai_api_key"
  GOOGLE_AI_API_KEY: "change_me_google_ai_api_key"
  GOOGLE_TRANSLATE_API_KEY: "change_me_google_translate_key"
  ANTHROPIC_API_KEY: "change_me_anthropic_api_key"
  
  # n8n Authentication
  N8N_USER: "admin"
  N8N_PASSWORD: "change_me_n8n_password"
  
  # Monitoring Passwords
  GRAFANA_PASSWORD: "change_me_grafana_password"
  
  # Email Configuration
  SMTP_USER: "your_email@gmail.com"
  SMTP_PASSWORD: "your_app_password"
  
  # Cloud Storage (AWS S3)
  AWS_ACCESS_KEY_ID: "change_me_aws_access_key"
  AWS_SECRET_ACCESS_KEY: "change_me_aws_secret_key"
  
  # Cloudflare
  CLOUDFLARE_API_TOKEN: "change_me_cloudflare_token"
  
  # Monetization
  ADSENSE_PUBLISHER_ID: "pub-change_me_adsense_id"
  AMAZON_AFFILIATE_ID: "change_me_amazon_affiliate_id"
  AMAZON_ACCESS_KEY: "change_me_amazon_access_key"
  AMAZON_SECRET_KEY: "change_me_amazon_secret_key"
  
  # Analytics
  GOOGLE_ANALYTICS_ID: "GA_MEASUREMENT_ID"
  FACEBOOK_PIXEL_ID: "change_me_facebook_pixel_id"
  
  # Slack Notifications
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: allixios
  labels:
    app.kubernetes.io/name: allixios
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key
  # Generate with: kubectl create secret tls tls-secret --cert=path/to/tls.crt --key=path/to/tls.key
  tls.crt: LS0tLS1CRUdJTi... # Your base64 encoded certificate
  tls.key: LS0tLS1CRUdJTi... # Your base64 encoded private key

---
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: allixios
  labels:
    app.kubernetes.io/name: allixios
    app.kubernetes.io/component: registry
type: kubernetes.io/dockerconfigjson
data:
  # Docker registry credentials for private images
  # Generate with: kubectl create secret docker-registry registry-secret --docker-server=your-registry --docker-username=your-username --docker-password=your-password
  .dockerconfigjson: eyJhdXRocyI6e... # Your base64 encoded docker config